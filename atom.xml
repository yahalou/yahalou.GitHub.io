<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yahalou.github.io</id>
    <title>long&apos;s blog</title>
    <updated>2022-06-23T04:51:58.891Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yahalou.github.io"/>
    <link rel="self" href="https://yahalou.github.io/atom.xml"/>
    <subtitle>吾生也有涯，而知也无涯</subtitle>
    <logo>https://yahalou.github.io/images/avatar.png</logo>
    <icon>https://yahalou.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, long&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[第七章 IO]]></title>
        <id>https://yahalou.github.io/post/di-qi-zhang-io/</id>
        <link href="https://yahalou.github.io/post/di-qi-zhang-io/">
        </link>
        <updated>2022-06-23T04:49:17.000Z</updated>
        <content type="html"><![CDATA[<h1 id="基本概念">基本概念</h1>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222232266.png" alt="image-20220622223234970" loading="lazy"></figure>
<h2 id="io控制方式">IO控制方式</h2>
<h3 id="程序查询方式程序中断方式">程序查询方式，程序中断方式</h3>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222241948.png" alt="image-20220622224104994" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222243876.png" alt="image-20220622224338964" loading="lazy"></figure>
<p>程序查询方式也可以定时查询，上图表示的是独占查询</p>
<h3 id="dma控制方式">DMA控制方式</h3>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222244643.png" alt="image-20220622224443419" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222251123.png" alt="image-20220622225147199" loading="lazy"></figure>
<p>与前两种的区别是：前两种是读到 CPU 的某个寄存器中，再读到主存中，DMA是直接读到主存中</p>
<h3 id="通道控制方式">通道控制方式</h3>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222255780.png" alt="image-20220622225532830" loading="lazy"></figure>
<h2 id="io系统组成">IO系统组成</h2>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222258390.png" alt="image-20220622225807984" loading="lazy"></figure>
<p>驱动程序的作用</p>
<h1 id="外部设备">外部设备</h1>
<h2 id="输入设备">输入设备</h2>
<p>键鼠</p>
<h2 id="输出设备">输出设备</h2>
<h4 id="显示器参数">显示器参数</h4>
<p>屏幕大小是<strong>对角线长度</strong></p>
<h4 id="vram的计算">VRAM的计算</h4>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222334058.png" alt="image-20220622233405050" loading="lazy"></figure>
<p>分辨率是像素个数，灰度位数是每个像素需要多少个bit表示</p>
<h4 id="关于显卡">关于显卡</h4>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222338287.png" alt="image-20220622233832301" loading="lazy"></figure>
<p>集显和独显的区别：集显的显存用的是内存</p>
<p>显存理论最小值：一帧的大小（VRAM容量）</p>
<h2 id="外存储器">外存储器</h2>
<h3 id="磁盘">磁盘</h3>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222351497.png" alt="image-20220622235103654" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222353751.png" alt="image-20220622235310872" loading="lazy"></figure>
<ul>
<li>
<p>一个硬盘有多个<strong>盘面</strong>，一个盘面有一个<strong>磁头</strong></p>
</li>
<li>
<p>一个盘面会有很多圈磁性材质，叫做<strong>磁道</strong></p>
</li>
<li>
<p>为了方便计算机读写，将每个磁道划分成多个<strong>扇区</strong></p>
</li>
<li>
<p><strong>柱面号</strong>就是磁道号</p>
</li>
</ul>
<h3 id="磁盘性能指标">磁盘性能指标</h3>
<h4 id="磁盘的容量">磁盘的容量</h4>
<figure data-type="image" tabindex="12"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230000317.png" alt="image-20220623000020994" loading="lazy"></figure>
<p>格式化后有些容量留作备用，所以会变小</p>
<h4 id="记录密度">记录密度</h4>
<figure data-type="image" tabindex="13"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230001540.png" alt="image-20220623000124468" loading="lazy"></figure>
<h3 id="平均存取时间">平均存取时间</h3>
<figure data-type="image" tabindex="14"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230003130.png" alt="image-20220623000259275" loading="lazy"></figure>
<p>旋转延迟时间平均等于<strong>转半圈所需时间</strong></p>
<h4 id="数据传输率">数据传输率</h4>
<figure data-type="image" tabindex="15"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230004728.png" alt="image-20220623000439942" loading="lazy"></figure>
<h3 id="磁盘阵列">磁盘阵列</h3>
<figure data-type="image" tabindex="16"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230007979.png" alt="image-20220623000730850" loading="lazy"></figure>
<p>RAID0<strong>没有</strong>容错能力，RAID1有容错能力，但是容量减少一半</p>
<h3 id="光盘">光盘</h3>
<figure data-type="image" tabindex="17"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230009126.png" alt="image-20220623000950252" loading="lazy"></figure>
<h1 id="中断">中断</h1>
<figure data-type="image" tabindex="18"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230826503.png" alt="image-20220623082612662" loading="lazy"></figure>
<p>原子操作：要么不做要么做到底</p>
<p>大多数中断都是可屏蔽中断</p>
<h2 id="中断判优">中断判优</h2>
<figure data-type="image" tabindex="19"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230830060.png" alt="image-20220623083023351" loading="lazy"></figure>
<figure data-type="image" tabindex="20"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230831876.png" alt="image-20220623083122392" loading="lazy"></figure>
<h2 id="中断处理过程">中断处理过程</h2>
<figure data-type="image" tabindex="21"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230834409.png" alt="image-20220623083403679" loading="lazy"></figure>
<figure data-type="image" tabindex="22"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230835936.png" alt="image-20220623083524084" loading="lazy"></figure>
<p>中断服务程序：</p>
<figure data-type="image" tabindex="23"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230838543.png" alt="image-20220623083806348" loading="lazy"></figure>
<h2 id="多重中断">多重中断</h2>
<figure data-type="image" tabindex="24"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230845657.png" alt="image-20220623084528949" loading="lazy"></figure>
<p>屏蔽字：哪些中断请求应该被屏蔽，只保留更深一层的中断，1为屏蔽，0为不屏蔽，自己要屏蔽自己</p>
<h2 id="中断细节">中断细节</h2>
<p>启动后CPU可以继续干之前的事情，跟程序查询不一样</p>
<figure data-type="image" tabindex="25"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230909993.png" alt="image-20220623090954094" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第六章 总线]]></title>
        <id>https://yahalou.github.io/post/di-liu-zhang-zong-xian/</id>
        <link href="https://yahalou.github.io/post/di-liu-zhang-zong-xian/">
        </link>
        <updated>2022-06-23T04:48:50.000Z</updated>
        <content type="html"><![CDATA[<h1 id="总线概述">总线概述</h1>
<h2 id="总线的分类">总线的分类</h2>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212027615.png" alt="image-20220621202716444" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212038027.png" alt="image-20220621203820965" loading="lazy"></figure>
<p>USB是串行总线</p>
<h2 id="系统总线结构">系统总线结构</h2>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212031177.png" alt="image-20220621203119257" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212031340.png" alt="image-20220621203133140" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212036859.png" alt="image-20220621203650141" loading="lazy"></figure>
<p>突发（猝发）传送：送出一个地址，收到多个地址连续的数据</p>
<p>DMA：Direct Memory Access 直接内存访问</p>
<h1 id="总线的性能指标">总线的性能指标</h1>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212039348.png" alt="image-20220621203947336" loading="lazy"></figure>
<ul>
<li>
<p>总线周期的单位是总线时钟周期</p>
</li>
<li>
<p>总线周期 -- 总线的工作频率，总线时钟周期 -- 总线的时钟频率</p>
</li>
<li>
<p>总线带宽 = 总线工作频率 * 总线宽度（速度，10^3）</p>
</li>
</ul>
<h1 id="仲裁">仲裁</h1>
<p>选择一个主设备获得总线控制权</p>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212124399.png" alt="image-20220621212403542" loading="lazy"></figure>
<h2 id="集中仲裁">集中仲裁</h2>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212125672.png" alt="image-20220621212546792" loading="lazy"></figure>
<p>发BR是请求控制权，都能发</p>
<p>发BS是控制权到自己手里了，通知总线控制部件</p>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212130368.png" alt="image-20220621213055469" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212132666.png" alt="image-20220621213223440" loading="lazy"></figure>
<h1 id="总线标准">总线标准</h1>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212142757.png" alt="image-20220621214200940" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206212140283.png" alt="image-20220621214021416" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第五章 中央处理器]]></title>
        <id>https://yahalou.github.io/post/di-wu-zhang-zhong-yang-chu-li-qi/</id>
        <link href="https://yahalou.github.io/post/di-wu-zhang-zhong-yang-chu-li-qi/">
        </link>
        <updated>2022-06-23T04:48:17.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cpu的功能和基本结构">CPU的功能和基本结构</h1>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211421291.png" alt="image-20220621142119145" loading="lazy"></figure>
<h1 id="指令执行过程">指令执行过程</h1>
<h2 id="指令周期">指令周期</h2>
<p>CPU从主存中<strong>取出并执行</strong>一条指令的时间成为指令周期</p>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211510422.png" alt="A076B27D01C648FF76E4C53A2FBDB017" loading="lazy"></figure>
<p>中断周期是为了保存程序断点</p>
<h2 id="指令周期的数据流">指令周期的数据流</h2>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211526558.png" alt="image-20220621152648955" loading="lazy"></figure>
<ul>
<li>
<p>PC在<strong>取值周期</strong>后就加1</p>
</li>
<li>
<p>程序断点存入堆栈中<img src="C:/Users/26033/Documents/Tencent Files/2603381596/FileRecv/MobileFile/5809F87E11AE8CE08F6F321CDA0FCC20.png" alt="5809F87E11AE8CE08F6F321CDA0FCC20" style="zoom:25%;" /></p>
</li>
<li>
<p>中断周期SP是寄存器，相当于指针，中断时把PC写入SP指向的存储单元</p>
</li>
</ul>
<h1 id="数据通路">数据通路</h1>
<ul>
<li>在一个时钟周期内控制信号不会变化</li>
<li>写的时候注意读写命令</li>
</ul>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211620425.png" alt="image-20220621162011530" loading="lazy"></figure>
<h1 id="控制器">控制器</h1>
<p>回忆细节可以看计组实验五</p>
<h2 id="硬布线控制器">硬布线控制器</h2>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211612087.png" alt="image-20220621161252155" loading="lazy"></figure>
<h2 id="微程序控制器">微程序控制器</h2>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211618176.png" alt="32C6B5FEF12333A9AE44E98FC38B0D40" loading="lazy"></figure>
<h3 id="编码方式">编码方式</h3>
<h4 id="直接编码">直接编码</h4>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211735660.png" alt="4B64A4B32091CB204A58D822015E87D2" loading="lazy"></figure>
<h4 id="字段直接编码">字段直接编码</h4>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211734127.png" alt="49557156349559C903933E27941E2F7B" loading="lazy"></figure>
<h1 id="指令流水线">指令流水线</h1>
<h2 id="时空图">时空图</h2>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211639060.png" alt="image-20220621163946108" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211640269.png" alt="8EACCFFED7D3D95D89242DC3FCC2232B" loading="lazy"></figure>
<h2 id="性能指标">性能指标</h2>
<h3 id="影响因素">影响因素</h3>
<p>资源冲突，数据冲突，控制冲突</p>
<h3 id="吞吐率">吞吐率</h3>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211929077.png" alt="0E12114EFB53A786A01193717F06AC1E" loading="lazy"></figure>
<h3 id="加速比">加速比</h3>
<p>用流水线和不用流水线的比</p>
<figure data-type="image" tabindex="12"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211934137.png" alt="image-20220621193402069" loading="lazy"></figure>
<h3 id="流水线效率">流水线效率</h3>
<figure data-type="image" tabindex="13"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211934072.png" alt="image-20220621193419289" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第四章 指令系统]]></title>
        <id>https://yahalou.github.io/post/di-si-zhang-zhi-ling-xi-tong/</id>
        <link href="https://yahalou.github.io/post/di-si-zhang-zhi-ling-xi-tong/">
        </link>
        <updated>2022-06-23T04:47:51.000Z</updated>
        <content type="html"><![CDATA[<h1 id="指令格式">指令格式</h1>
<h2 id="数据寻址">数据寻址</h2>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211312759.png" alt="A73C7E354325925BFCF27D5239F29ECD" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="C:/Users/26033/AppData/Roaming/Typora/typora-user-images/image-20220621131540676.png" alt="image-20220621131540676" loading="lazy"></figure>
<ul>
<li>间接寻址 PC指向的是条指令</li>
<li><strong>操作码</strong>不是<strong>操作数</strong>，操作数是你寻的那个数</li>
<li>计算指令条数只看操作码</li>
<li>寄存器寻址指令里会有寄存器的编号</li>
</ul>
<h1 id="cisc-risc">CISC、RISC</h1>
<p>CISC -- Complex Instruction Set Computer -- 复杂指令系统计算机</p>
<p>RISC -- Reduced Instruction Set Computer -- 精简指令系统计算机</p>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211338906.png" alt="image-20220621133832410" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[形式语言与自动机]]></title>
        <id>https://yahalou.github.io/post/xing-shi-yu-yan-yu-zi-dong-ji/</id>
        <link href="https://yahalou.github.io/post/xing-shi-yu-yan-yu-zi-dong-ji/">
        </link>
        <updated>2022-06-21T02:41:51.000Z</updated>
        <content type="html"><![CDATA[<p>结合 PPT 观看效果更好</p>
<h1 id="文法">文法</h1>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041330.jpg" alt="形式语言笔记_页面_01" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041332.jpg" alt="形式语言笔记_页面_02" loading="lazy"></figure>
<h1 id="dfanfa正则表达式">DFA，NFA，正则表达式</h1>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041333.jpg" alt="形式语言笔记_页面_03" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041334.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041335.jpg" alt="形式语言笔记_页面_05" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041336.jpg" alt="形式语言笔记_页面_06" loading="lazy"></figure>
<h1 id="cnfpda">CNF，PDA</h1>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041337.jpg" alt="形式语言笔记_页面_07" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041338.jpg" alt="形式语言笔记_页面_08" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041339.jpg" alt="形式语言笔记_页面_09" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206211041340.jpg" alt="形式语言笔记_页面_10" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第三章 存储系统]]></title>
        <id>https://yahalou.github.io/post/di-san-zhang-cun-chu-xi-tong/</id>
        <link href="https://yahalou.github.io/post/di-san-zhang-cun-chu-xi-tong/">
        </link>
        <updated>2022-06-19T16:08:01.000Z</updated>
        <content type="html"><![CDATA[<h1 id="存储器的层次结构">存储器的层次结构</h1>
<img src="C:/Users/26033/AppData/Roaming/Typora/typora-user-images/image-20220619171315343.png" alt="image-20220619171315343" style="zoom:200%;" />
<p>存取周期=存取时间+恢复时间<img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191722268.png" alt="B1A6FF06DCC8CC4FB410807205367808" loading="lazy"></p>
<h1 id="半导体随机存储器ram">半导体随机存储器（RAM）</h1>
<p>主存用DRAM，cache用SRAM</p>
<p><strong>DRAM</strong>一般2ms要<strong>刷新</strong>一次，因为DRAM上的电荷只能维持1~2ms，只有DRAM要刷新</p>
<p><strong>地址分为行列地址</strong>，算地址线的时候要除2</p>
<p>地址线计算：地址线+数据线+片选线+读写控制线（可以是同一根）</p>
<p>DRAM一般<strong>按行刷新</strong></p>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191727180.png" alt="image-20220619172747303" loading="lazy"></figure>
<h1 id="只读存储器rom">只读存储器（ROM）</h1>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191728198.png" alt="image-20220619172843031" loading="lazy"></figure>
<p><strong>闪存</strong>要先擦除再写入，所以<strong>写速度 &lt; 读速度</strong></p>
<h1 id="主存与cpu的连接">主存与CPU的连接</h1>
<h2 id="主存容量的扩展">主存容量的扩展</h2>
<p>位扩展：并联</p>
<p>字扩展：串联<img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191838811.png" alt="208E27E903D000E94F3E25ACF8CEE2BA" loading="lazy"></p>
<h1 id="多模块存储器">多模块存储器</h1>
<h2 id="单体多字系统">单体多字系统</h2>
<h2 id="多体并行储存器">多体并行储存器</h2>
<h2 id="目的">目的</h2>
<p>一个存储器有一个存取周期，在一个存储器内顺序存取很浪费时间</p>
<h4 id="高位交叉编址">高位交叉编址</h4>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191912507.png" alt="697E3CE38C5C8B5027195EF5E85A9B6E" loading="lazy"></figure>
<p>本质上还是顺序存储器，不能并行访问</p>
<h4 id="低位交叉编址">低位交叉编址</h4>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191912994.png" alt="4495B43E60373C3FCB391460BDF0227B" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191920681.png" alt="81845D93ED6BC26436F420FBC7AE05BE" loading="lazy"></figure>
<h1 id="cache">Cache</h1>
<h2 id="工作原理">工作原理</h2>
<p>时间局部性：一旦一条指令执行，它就可能在不久的将来再被执行</p>
<p>空间局部性：一旦一个存储单元被访问，它附近的存储单元也很快被访问</p>
<p>Cache将主存分组，符合空间局部性</p>
<p>写回法写命中（对Cache写命中时修改Cache的内容），符合空间局部性</p>
<p><strong>提升效率</strong></p>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191944145.png" alt="78E213B58D8A3F4CDE234853CA10E623" loading="lazy"></figure>
<h2 id="cache和主存的映射关系">Cache和主存的映射关系</h2>
<ul>
<li>将主存地址分成多个字段</li>
</ul>
<ul>
<li>
<p>每个<strong>Cache行（块）<strong>大小和</strong>主存块</strong>相等</p>
</li>
<li>
<p>Cache和主存之间以<strong>块</strong>为单位交换数据</p>
</li>
<li>
<p>不命中<strong>先送到对应Cache中</strong>，再送到CPU中</p>
</li>
</ul>
<h3 id="全相联映射">全相联映射</h3>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206192253448.png" alt="image-20220619225319140" loading="lazy"></figure>
<p>前22位为主存块号，主存中处于同一块的地址主存块号相同</p>
<h3 id="直接映射">直接映射</h3>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206192257586.png" alt="image-20220619225729512" loading="lazy"></figure>
<p>这里主存块号%Cache总块数余了三位，就是行号，可以快速定位</p>
<p>标记位变为19位，行号提前匹配了</p>
<p><strong>行号不算在Cache的存储容量里</strong></p>
<h3 id="组相联映射">组相联映射</h3>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206192305199.png" alt="image-20220619230510247" loading="lazy"></figure>
<h2 id="cache替换算法">Cache替换算法</h2>
<p>直接映射无需考虑，全相联或组相联需要考虑</p>
<h3 id="lru-近期最少使用算法">LRU 近期最少使用算法</h3>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206192323824.png" alt="5A422F723C5ADE60380CC620D07B6ED8" loading="lazy"></figure>
<h1 id="虚拟存储器">虚拟存储器</h1>
<p>跳了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第二章 数据的表示和运算]]></title>
        <id>https://yahalou.github.io/post/di-er-zhang-shu-ju-de-biao-shi-he-yun-suan/</id>
        <link href="https://yahalou.github.io/post/di-er-zhang-shu-ju-de-biao-shi-he-yun-suan/">
        </link>
        <updated>2022-06-19T08:20:40.000Z</updated>
        <content type="html"><![CDATA[<h1 id="数制与编码">数制与编码</h1>
<h2 id="十进制转换为任意进制">十进制转换为任意进制</h2>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191004723.png" alt="554DCF43991E684845EF094B25C15F76" loading="lazy"></figure>
<h2 id="汉明码">汉明码</h2>
<p>偶校验码</p>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191019456.png" alt="image-20220619101946912" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191021842.png" alt="image-20220619102142960" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191022727.png" alt="image-20220619102241665" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191023511.png" alt="image-20220619102339773" loading="lazy"></figure>
<p>最开头的bit的作用</p>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191034644.png" alt="image-20220619103426389" loading="lazy"></figure>
<p>例：画表格也可以，注意由低到高顺序 <img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191101945.png" alt="97533D1A363E1A3429B3CB97408A4C41" loading="lazy"></p>
<h1 id="定点数">定点数</h1>
<h2 id="表示">表示</h2>
<h3 id="定点小数">定点小数</h3>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191109915.png" alt="image-20220619110951862" loading="lazy"></figure>
<h3 id="定点整数">定点整数</h3>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191110032.png" alt="image-20220619111004101" loading="lazy"></figure>
<h3 id="原码">原码</h3>
<p>符号位+绝对值</p>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191112358.png" alt="image-20220619111221511" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191112388.png" alt="image-20220619111233909" loading="lazy"></figure>
<h3 id="补码反码">补码，反码</h3>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191119235.png" alt="E959C3F798B9C64BA4CAE91E44EAC102" loading="lazy"></figure>
<p>转换最常用的是<strong>数值位取反加1</strong></p>
<h3 id="移码">移码</h3>
<p>见IEEE 754</p>
<h2 id="计算">计算</h2>
<h3 id="移位计算">移位计算</h3>
<figure data-type="image" tabindex="12"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191128769.png" alt="image-20220619112803831" loading="lazy"></figure>
<h3 id="原码加减法">原码加减法</h3>
<p><strong>当左边位出现溢出时，将溢出位丢掉</strong></p>
<figure data-type="image" tabindex="13"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191132078.png" alt="image-20220619113216287" loading="lazy"></figure>
<h3 id="补码加减法">补码加减法</h3>
<p>做加法，两数的补码直接相加</p>
<p>做减法，将被减数与减数的<strong>机器负数</strong>（符号位取反，数值位取反+1）相加</p>
<p>减法运算在机器中是用<strong>加法器</strong>实现的</p>
<figure data-type="image" tabindex="14"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191134674.png" alt="image-20220619113421627" loading="lazy"></figure>
<h3 id="溢出判别">溢出判别</h3>
<figure data-type="image" tabindex="15"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191138335.png" alt="image-20220619113837482" loading="lazy"></figure>
<p>变形补码（双符号位）负数符号位变为11，正数为00，相加后判断</p>
<h3 id="乘法运算">乘法运算</h3>
<h4 id="原码一位乘法间接补码">原码一位乘法（间接补码）</h4>
<figure data-type="image" tabindex="16"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191228417.png" alt="7E57F410854DFE82DF9B589E985A4BFC" loading="lazy"></figure>
<h3 id="除法运算">除法运算</h3>
<h4 id="原码除法运算不恢复余数法">原码除法运算（不恢复余数法）</h4>
<figure data-type="image" tabindex="17"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191239717.png" alt="C4D0B84354FCDE6C4555FA82251054F6" loading="lazy"></figure>
<p>原理：先从被除数减去除数，看看能不能商1，不能就商0，加回去</p>
<h3 id="强制类型转换">强制类型转换</h3>
<p>c语言的数据在内存中为补码形式</p>
<p>将所给数字写为二进制，然后按照转换成不同的码的规则进行读出</p>
<h2 id="数据存储">数据存储</h2>
<h3 id="大端小端">大端小端</h3>
<p>大端小端不同数据的顺序不变，变得是每个数据内部的存储顺序</p>
<figure data-type="image" tabindex="18"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191305751.png" alt="F6C761DC02B13EBB0BEC87C4E67DFD98" loading="lazy"></figure>
<h3 id="边界对齐">边界对齐</h3>
<p>半字地址一定是 2 的整数倍，字地址一定是 4 的整数倍</p>
<h1 id="浮点数">浮点数</h1>
<h2 id="表示-2">表示</h2>
<p>阶码：<strong>定点整数</strong></p>
<p>尾数：<strong>定点小数</strong></p>
<figure data-type="image" tabindex="19"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191350281.png" alt="ABA0D65CA9F55261F981800CBAE92162" loading="lazy"></figure>
<h2 id="浮点数规范化">浮点数规范化</h2>
<p>尾数的最高数值必须是一个有效值，通过调整阶码实现规范化</p>
<h2 id="ieee-754标准">IEEE 754标准</h2>
<h3 id="转换">转换</h3>
<p>阶码用<strong>移码</strong>表示</p>
<p>移码=真值+偏置值</p>
<p>尾数用<strong>原码</strong>表示</p>
<p>默认最高位为1，免去规格化，所以尾数部分为 <strong>1.M</strong></p>
<figure data-type="image" tabindex="20"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191416708.png" alt="image-20220619141641715" loading="lazy"></figure>
<figure data-type="image" tabindex="21"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191424092.png" alt="1319835082B48CF397F37F3CC34667DB" loading="lazy"></figure>
<h3 id="范围">范围</h3>
<p>阶码 E 全 0 ，尾数M不全为0，表示非规格化小数</p>
<figure data-type="image" tabindex="22"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191438281.png" alt="9BC91E92E1BF48CD788A403057D97AF5" loading="lazy"></figure>
<figure data-type="image" tabindex="23"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191441781.png" alt="image-20220619144105833" loading="lazy"></figure>
<h2 id="计算-2">计算</h2>
<h3 id="加减运算">加减运算</h3>
<figure data-type="image" tabindex="24"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191448111.png" alt="image-20220619144808454" loading="lazy"></figure>
<figure data-type="image" tabindex="25"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206191508027.png" alt="image-20220619150818281" loading="lazy"></figure>
<h3 id="强制类型转换-2">强制类型转换</h3>
<p>从 int 转为 float 可能发生精度损失和溢出</p>
<p>从 float 转为 int 可能会发生数据舍入</p>
<h3 id="日常写代码的帮助">日常写代码的帮助</h3>
<pre><code class="language-c">计算2.0F-1.3F
1.3F 规范化表示：	1.01001100110011001100110 * 2 ^ 0
2.0F 规范化表示：	1.00000000000000000000000 * 2 ^ 1
    
首先对阶 1.3F变为 0.10100110011001100110011 * 2 ^ 1
2.0F-1.3F =  	0.01011001100110011001101 * 2 ^ 1
规范化表示：		1.01100110011001100110100 * 2 ^ -1
    
0.7F规范化表示： 	1.01100110011001100110011 * 2 ^ -1    
    
所以2.0F-1.3F!=0.7F
    
计算2.0F-1.4F
2.0F-1.4F运算结果
    规范化表示：	1.00110011001100110011010 * 2 ^ -1
0.6F 规范化表示：	1.00110011001100110011010 * 2 ^ -1
    
2.0F-1.4F==0.7F
</code></pre>
<p><strong>浮点数计算，在存储和运算过程中都可能会有精度的丢失，故出现的结果和我们以为的结果就会有出入</strong></p>
<p>比如1.3 F ，由于二进制为无限循环小数，精度限制后值就变了</p>
<p>1.4 F ，值也变了，但舍入后相同，是巧合</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第一章 计算机系统概述]]></title>
        <id>https://yahalou.github.io/post/di-yi-zhang-ji-suan-ji-xi-tong-gai-shu/</id>
        <link href="https://yahalou.github.io/post/di-yi-zhang-ji-suan-ji-xi-tong-gai-shu/">
        </link>
        <updated>2022-06-18T13:58:45.000Z</updated>
        <content type="html"><![CDATA[<h1 id="第一章-计算机系统概述">第一章 计算机系统概述</h1>
<h2 id="计算机的多级层次结构">计算机的多级层次结构</h2>
<img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206181601396.png" alt="2DAB8ACC8D90DE5CD5B0E8EF24B30B7A" style="zoom: 33%;" />
<h3 id="软硬件在逻辑上是等效的">软硬件在逻辑上是等效的</h3>
<p>任何可以用软件实现的操作也可以用硬件来实现</p>
<h3 id="编译器">编译器</h3>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206181601232.png" alt="95CF069E0447AC65B27B822AFD46FC87" loading="lazy"></figure>
<p><strong>编译程序</strong>将高级语言程序<strong>文件</strong>翻译成机器语言程序<strong>文件</strong>后执行</p>
<p><strong>解释程序</strong>一句一句的翻译高级语言程序<strong>文件</strong>，翻译后立即执行，不生成机器语言程序<strong>文件</strong></p>
<h3 id="机器语言是唯一机器可以识别与执行的语言">机器语言是唯一机器可以识别与执行的语言</h3>
<h2 id="计算机的性能指标">计算机的性能指标</h2>
<h3 id="机器字长指令字长存储字长">机器字长，指令字长，存储字长</h3>
<blockquote>
<p>都是字长的整数倍</p>
</blockquote>
<h4 id="机器字长">机器字长</h4>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/AD108F07A0414A597D677829DA73894D.png" alt="AD108F07A0414A597D677829DA73894D" loading="lazy"></figure>
<h4 id="指令字长">指令字长</h4>
<p>一个指令包含的二进制代码的位数</p>
<h4 id="存储字长">存储字长</h4>
<p>一个存储单元存储的二进制代码的位数，简称为字</p>
<h3 id="主存容量">主存容量</h3>
<h3 id="运算速度">运算速度</h3>
<blockquote>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206181600268.png" alt="111FB39F3EEFDB21B1842D3C91015FCD" loading="lazy"></figure>
</blockquote>
<blockquote>
<p><strong>在计算过程中标注单位C(circle),I(instruct),S(second)</strong></p>
</blockquote>
<h4 id="主频-cs-cpu时钟周期">主频 c/s CPU时钟周期</h4>
<p>CPU最小的时间单位，执行指令的每个动作至少需要1个时钟周期</p>
<p>主频=速度，一秒多少个时钟周期</p>
<h4 id="cpi-ci">CPI <strong>c/i</strong></h4>
<p>执行一条指令所需的时钟周期数(clock cycle per instruction)</p>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206181559433.png" alt="2" loading="lazy"></figure>
<h4 id="cpu执行时间-s">CPU执行时间 s</h4>
<p>运行一个程序所花费的时间</p>
<p>CPU执行时间=指令条数*CPI/主频</p>
<h4 id="mips-is">MIPS <strong>i/s</strong></h4>
<p>每秒执行多少百万条指令，million instruction <strong>per</strong> second</p>
<p>MIPS=指令条数/(执行时间*10^6)=主频/( CPI *10^6)</p>
<h4 id="浮点数">浮点数</h4>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206181559605.png" alt="1" loading="lazy"></figure>
]]></content>
    </entry>
</feed>
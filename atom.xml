<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yahalou.github.io</id>
    <title>long&apos;s blog</title>
    <updated>2022-07-04T07:45:58.474Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yahalou.github.io"/>
    <link rel="self" href="https://yahalou.github.io/atom.xml"/>
    <subtitle>吾生也有涯，而知也无涯</subtitle>
    <logo>https://yahalou.github.io/images/avatar.png</logo>
    <icon>https://yahalou.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, long&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[第六章 运输层]]></title>
        <id>https://yahalou.github.io/post/di-liu-zhang-yun-shu-ceng/</id>
        <link href="https://yahalou.github.io/post/di-liu-zhang-yun-shu-ceng/">
        </link>
        <updated>2022-07-04T07:44:21.000Z</updated>
        <content type="html"><![CDATA[<h1 id="概述">概述</h1>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538745.png" alt="Untitled" loading="lazy"></figure>
<h1 id="运输层端口号复用分用">运输层端口号，复用，分用</h1>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538746.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538747.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538748.png" alt="Untitled" loading="lazy"></figure>
<h1 id="udp和tcp的对比">UDP和TCP的对比</h1>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538749.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538750.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538751.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538752.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538753.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538754.png" alt="Untitled" loading="lazy"></figure>
<h1 id="tcp的流量控制">TCP的流量控制</h1>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538755.png" alt="Untitled" loading="lazy"></figure>
<h1 id="tcp的拥塞控制">TCP的拥塞控制</h1>
<figure data-type="image" tabindex="12"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538756.png" alt="Untitled" loading="lazy"></figure>
<p>四种算法看课件</p>
<figure data-type="image" tabindex="13"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538757.png" alt="Untitled" loading="lazy"></figure>
<h1 id="tcp超时重传">TCP超时重传</h1>
<h1 id="tcp可靠传输的实现">TCP可靠传输的实现</h1>
<p>窗口大小调整</p>
<figure data-type="image" tabindex="14"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538758.png" alt="Untitled" loading="lazy"></figure>
<p>确认报文和数据链路层不一样，是接收到的字节+1</p>
<h1 id="tcp的连接建立和释放">TCP的连接建立和释放</h1>
<figure data-type="image" tabindex="15"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538759.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="16"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538760.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="17"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538761.png" alt="Untitled" loading="lazy"></figure>
<p>握手的第三条和挥手的第一条都可以携带数据，握手第三条如果不携带数据seq就不会加1，挥手第一条带不带都加1</p>
<h1 id="tcp报文段的首部格式">TCP报文段的首部格式</h1>
<figure data-type="image" tabindex="18"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538762.png" alt="Untitled" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第五章 网络层]]></title>
        <id>https://yahalou.github.io/post/di-wu-zhang-wang-luo-ceng/</id>
        <link href="https://yahalou.github.io/post/di-wu-zhang-wang-luo-ceng/">
        </link>
        <updated>2022-07-04T07:43:48.000Z</updated>
        <content type="html"><![CDATA[<h1 id="ip地址">IP地址</h1>
<h3 id="mac地址和ip地址的区别">mac地址和ip地址的区别</h3>
<p><strong>ip地址可以区分网络和网络上的不同接口</strong></p>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538234.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538236.png" alt="Untitled" loading="lazy"></figure>
<h3 id="地址解析协议arp">地址解析协议ARP</h3>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538237.png" alt="Untitled" loading="lazy"></figure>
<p><strong>ARP只在同一个网络中使用</strong></p>
<p>数据报在不同网络中 IP 地址不变，MAC 地址一直在变</p>
<h1 id="网络层概述">网络层概述</h1>
<p>二图等效</p>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538238.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538239.png" alt="Untitled" loading="lazy"></figure>
<p><strong>因特网</strong>是用户数量最多的<strong>互联网</strong></p>
<p>由于TCP/IP协议栈的网络层使用<strong>网际协议IP</strong>，所以TCP/IP协议栈中网络层常称为<strong>网际层</strong></p>
<p>网络层提供两种服务，面向连接的虚电路服务，无连接的数据报服务</p>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538240.png" alt="Untitled" loading="lazy"></figure>
<h1 id="ipv4">IPv4</h1>
<h2 id="概述">概述</h2>
<h3 id="意思">意思</h3>
<p>IPv4地址就是给因特网上的每一台主机、路由的每一个接口分配一个全世界范围内是唯一的32比特的标识符</p>
<h3 id="书写">书写</h3>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538241.png" alt="Untitled" loading="lazy"></figure>
<h2 id="分类编址的ipv4地址">分类编址的IPv4地址</h2>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538242.png" alt="Untitled" loading="lazy"></figure>
<p><strong>不能指派给主机或路由器接口的地址</strong></p>
<ol>
<li>网络号0保留不指派，网络号127作为本地环回测试地址，不指派</li>
</ol>
<p>特指A类地址，网络号 00000000 和 11111111 都不行，别的类都没什么限制</p>
<ol>
<li>主机号全0</li>
<li>主机号全1</li>
</ol>
<h2 id="划分子网的ipv4地址">划分子网的IPv4地址</h2>
<p>在分类编址地址基础上借用一部分主机号作为子网号</p>
<h3 id="子网掩码">子网掩码</h3>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538243.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538244.png" alt="Untitled" loading="lazy"></figure>
<h2 id="无分类编制的ipv4地址">无分类编制的IPv4地址</h2>
<p>Classless Inter-Domain Routing 无分类域间路由选择CIDR</p>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538245.png" alt="Untitled" loading="lazy"></figure>
<p>聚合C类网：可以表示多少个C类网，本来有24位表示网络地址，现在占了20个，只有4位表示网络地址</p>
<figure data-type="image" tabindex="12"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538246.png" alt="Untitled" loading="lazy"></figure>
<h2 id="ipv4地址的应用规划">IPv4地址的应用规划</h2>
<p>定长的子网掩码、变长的子网掩码</p>
<p>起点只能选取块大小整数倍的地址作为起点</p>
<h1 id="ip数据报的发送和转发过程">IP数据报的发送和转发过程</h1>
<figure data-type="image" tabindex="13"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538247.png" alt="Untitled" loading="lazy"></figure>
<p>发现不在一个网络，发给<strong>默认网关</strong>来帮忙转发，可能有很多个路由器，默认网关就是默认的路由器接口</p>
<p>ip地址&amp;子网掩码=网络地址，ip地址有具体的设备号，网络地址只有网络号</p>
<figure data-type="image" tabindex="14"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538248.png" alt="Untitled" loading="lazy"></figure>
<p><strong>路由器中不保存ip地址，保存网络地址</strong></p>
<p><strong>路由器不转发任何广播数据报</strong></p>
<h1 id="路由">路由</h1>
<p><strong>网关=路由器</strong></p>
<h2 id="静态路由配置及其问题">静态路由配置及其问题</h2>
<p>路由器匹配细节：要看用的是哪种IPv4地址，下图用的是无分类编址的IPv4地址，匹配机制：<a href="https://www.notion.so/e56fee107ba6488299520417adaba67b">https://www.notion.so/e56fee107ba6488299520417adaba67b#43bb38e5a66a47739e48ed73fe913508</a>网络局和如果是划分子网的地址那要精确到子网地址匹配</p>
<figure data-type="image" tabindex="15"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538249.png" alt="Untitled" loading="lazy"></figure>
<h2 id="路由选择协议">路由选择协议</h2>
<figure data-type="image" tabindex="16"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538250.png" alt="Untitled" loading="lazy"></figure>
<h1 id="路由信息协议rip">路由信息协议RIP</h1>
<h3 id="routing-information-protocol">routing information protocol</h3>
<p>每一个路由器都要维护从它自己到自治系统AS内其他每一个网络的距离记录。距离用跳数表示，路由器到直连网络距离为1，每经过一个路由器加1，<strong>距离=16相当于不可达</strong></p>
<p>如果路由器知道网络n1不可达，那么该路由器和n1是直连的</p>
<figure data-type="image" tabindex="17"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538251.png" alt="Untitled" loading="lazy"></figure>
<h3 id="交换信息规则">交换信息规则</h3>
<figure data-type="image" tabindex="18"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538252.png" alt="Untitled" loading="lazy"></figure>
<h3 id="路由环路问题">路由环路问题</h3>
<figure data-type="image" tabindex="19"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538253.png" alt="Untitled" loading="lazy"></figure>
<h1 id="开放最短路径优先ospf">开放最短路径优先OSPF</h1>
<p>Open Shortest Path First</p>
<h1 id="边界网关协议bgp">边界网关协议BGP</h1>
<p>是外部网关协议，在不同自治系统之间</p>
<h1 id="层级路由">层级路由</h1>
<figure data-type="image" tabindex="20"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538254.png" alt="5DE2510B9E52E5997B9EEA858BEA0DD0.png" loading="lazy"></figure>
<h1 id="ipv4数据报格式">IPv4数据报格式</h1>
<h1 id="首部格式">首部格式</h1>
<figure data-type="image" tabindex="21"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538255.png" alt="Untitled" loading="lazy"></figure>
<p>标识、标志、片偏移共同用于IP数据报分片：</p>
<figure data-type="image" tabindex="22"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538256.png" alt="Untitled" loading="lazy"></figure>
<p>片偏移只能为<strong>整数</strong></p>
<h1 id="网际控制报文协议icmp">网际控制报文协议ICMP</h1>
<figure data-type="image" tabindex="23"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538257.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="24"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538258.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="25"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538259.png" alt="Untitled" loading="lazy"></figure>
<h1 id="虚拟专用网vpn与网络地址转换nat">虚拟专用网VPN与网络地址转换NAT</h1>
<figure data-type="image" tabindex="26"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538260.png" alt="Untitled" loading="lazy"></figure>
<p>专有地址只能用于一个机构的内部通信，而不能用于和因特网上的主机通信。只能用作本地地址而不能用作全球地址，对目的地址是私有地址的IP数据报一律不转发</p>
<p>NAT</p>
<figure data-type="image" tabindex="27"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538261.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="28"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538262.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="29"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041538263.png" alt="Untitled" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第四章 MAC]]></title>
        <id>https://yahalou.github.io/post/di-si-zhang-mac/</id>
        <link href="https://yahalou.github.io/post/di-si-zhang-mac/">
        </link>
        <updated>2022-07-04T07:43:22.000Z</updated>
        <content type="html"><![CDATA[<h1 id="macmedium-access-control-媒体接入控制">MAC:medium access control 媒体接入控制</h1>
<p>一根总线就是一个共享传输媒体，协调发送接收站点对于一个共享传输媒体的占用就是媒体接入控制</p>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537188.png" alt="Untitled" loading="lazy"></figure>
<p>有线局域网用CSMA/CD</p>
<p>无线局域网用CSMA/CA（802.11 wlan）</p>
<h1 id="静态划分信道">静态划分信道</h1>
<h2 id="cdm的计算">CDM的计算</h2>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537190.png" alt="Untitled" loading="lazy"></figure>
<h1 id="动态接入控制-随机接入">动态接入控制-随机接入</h1>
<h2 id="csmacd-carrier-sense-multiple-accesscollision-detection">CSMA/CD carrier sense multiple access/collision detection</h2>
<p>载波监听多址接入/碰撞检测</p>
<h3 id="三个名词的意思"><strong>三个名词的意思</strong></h3>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537191.png" alt="Untitled" loading="lazy"></figure>
<p>只有正在发送帧的站才会碰撞检测</p>
<p>总线空闲96比特时间就是96比特时间都没收到帧了</p>
<p><strong>为什么有了载波监听还会碰撞</strong></p>
<p><code>在物理层所有东西传播速度都是一样的</code></p>
<p>载波监听的原理是检测有没有数据传给自己，因为这是广播，所以传给别人的帧也会传给自己，如果没有帧传给自己，则信道空闲，所以当A发送的信号还没有传到B时，B认为信道是空闲的，就发帧，结果碰撞了</p>
<p>如果A已经传到最远站点了，那所有站点都收到帧了，所有站点都知道A在发，信道不空闲，即A seize了信道，这所耗费的时间就是争用期</p>
<h3 id="争用期"><strong>争用期</strong></h3>
<p>如果**发了（一直在发）**争用期这么长时间还没检测到碰撞，就可以肯定没有碰撞</p>
<p>最坏情况：快发到最远的站点了，最远的站点发了个帧，冲突，所以争用期为2t</p>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537192.png" alt="Untitled" loading="lazy"></figure>
<h3 id="最小帧长"><strong>最小帧长</strong></h3>
<p>发送帧至少要发满一个争用期</p>
<p>10Mb/s以太网最小帧长：<strong>64字节</strong>，512比特（见上图最后一行）</p>
<p>以太网<strong>规定争用期为512比特发送时间</strong>，所以要发满这么长时间，得512比特</p>
<p>以太网规定争用期为512比特发送时间，即规定了传播时延，即规定了数据总线长度</p>
<h3 id="最大帧长"><strong>最大帧长</strong></h3>
<p>太长了缓冲区放不下</p>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537193.png" alt="Untitled" loading="lazy"></figure>
<h3 id="退避时间"><strong>退避时间</strong></h3>
<p>碰撞检测到之后退避一段时间再发送</p>
<p>基本退避时间就是争用期，发送最小帧需要一个争用期时间</p>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537194.png" alt="Untitled" loading="lazy"></figure>
<h3 id="信道利用率"><strong>信道利用率</strong></h3>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537195.png" alt="Untitled" loading="lazy"></figure>
<p>图中情况是发送帧到最远站点的情况</p>
<p>占用信道时间=最后一个字节出来时间+传播时延</p>
<p><strong>不适用于无线网络</strong></p>
<ul>
<li>不容易检测冲突信号</li>
<li>隐蔽站问题</li>
</ul>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537196.png" alt="Untitled" loading="lazy"></figure>
<h2 id="csmaca-carrier-sense-multiple-accesscollision-avoidance">CSMA/CA carrier sense multiple access/collision avoidance</h2>
<p>载波监听多址接入/碰撞避免</p>
<h3 id="帧间间隔ifs"><strong>帧间间隔IFS</strong></h3>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537197.png" alt="Untitled" loading="lazy"></figure>
<h3 id="工作原理"><strong>工作原理</strong></h3>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537198.png" alt="Untitled" loading="lazy"></figure>
<ul>
<li>用的是停止等待协议</li>
<li>源站在检测到信道空闲之后要再等待一段时间DIFS</li>
</ul>
<p>考虑到其他的站有高优先级的帧要发送，若有就让高优先级先发</p>
<ul>
<li>目的站正确接收数据帧后还要等待一段时间按SIFS才能发送ACK帧</li>
</ul>
<p>站点从接收状态转为发送状态需要一定时间</p>
<ul>
<li>图中问题</li>
</ul>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537199.png" alt="Untitled" loading="lazy"></figure>
<h3 id="退避算法"><strong>退避算法</strong></h3>
<figure data-type="image" tabindex="12"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537200.png" alt="Untitled" loading="lazy"></figure>
<p>例子：</p>
<figure data-type="image" tabindex="13"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537201.png" alt="Untitled" loading="lazy"></figure>
<h3 id="信道预约和虚拟载波监听"><strong>信道预约和虚拟载波监听</strong></h3>
<figure data-type="image" tabindex="14"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537202.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="15"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537203.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="16"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537204.png" alt="Untitled" loading="lazy"></figure>
<h1 id="mac地址">MAC地址</h1>
<h2 id="别称"><strong>别称</strong></h2>
<figure data-type="image" tabindex="17"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537205.png" alt="Untitled" loading="lazy"></figure>
<h2 id="ieee-802局域网mac地址格式"><strong>IEEE 802局域网MAC地址格式</strong></h2>
<p>xx-xx-xx-xx-xx-xx</p>
<figure data-type="image" tabindex="18"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537206.png" alt="Untitled" loading="lazy"></figure>
<p>多播地址：每个主机都有一个多播组列表，里面有很多多播地址</p>
<h1 id="集线器和交换机">集线器和交换机</h1>
<h2 id="集线器"><strong>集线器</strong></h2>
<p>半双工：一个站点不能同时接收</p>
<figure data-type="image" tabindex="19"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537207.png" alt="Untitled" loading="lazy"></figure>
<h2 id="交换机">交换机</h2>
<figure data-type="image" tabindex="20"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537208.png" alt="Untitled" loading="lazy"></figure>
<p>全双工方式</p>
<figure data-type="image" tabindex="21"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537209.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="22"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537210.png" alt="Untitled" loading="lazy"></figure>
<h2 id="交换机自学习和转发帧">交换机自学习和转发帧</h2>
<p>看课件吧。。比较动态</p>
<h2 id="交换机生成树协议stp">交换机生成树协议STP</h2>
<figure data-type="image" tabindex="23"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537211.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="24"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537212.png" alt="Untitled" loading="lazy"></figure>
<h1 id="vlan-虚拟局域网">VLAN 虚拟局域网</h1>
<p>将较大广播域分成多个小广播域，<strong>在交换机上实现</strong></p>
<h2 id="ieee-8021q帧">IEEE 802.1Q帧</h2>
<figure data-type="image" tabindex="25"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537213.png" alt="Untitled" loading="lazy"></figure>
<h2 id="交换机的端口类型">交换机的端口类型</h2>
<p>动态过程，见课件</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第三章 数据链路层]]></title>
        <id>https://yahalou.github.io/post/di-san-zhang-shu-ju-lian-lu-ceng/</id>
        <link href="https://yahalou.github.io/post/di-san-zhang-shu-ju-lian-lu-ceng/">
        </link>
        <updated>2022-07-04T07:42:47.000Z</updated>
        <content type="html"><![CDATA[<h1 id="第三章-数据链路层">第三章 数据链路层</h1>
<h1 id="封装成帧">封装成帧</h1>
<p>以太网规定，帧间间隔为<strong>96比特时间</strong></p>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041536999.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537088.png" alt="Untitled" loading="lazy"></figure>
<p>每5个连续的1后面插入一个比特0</p>
<h1 id="差错检测">差错检测</h1>
<p>循环冗余校验码CRC，详细例子见课件</p>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537090.png" alt="Untitled" loading="lazy"></figure>
<p>余数添加到待发送信息的后面，<strong>余数的位数应该与生成式最高次数相同</strong></p>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537091.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537092.png" alt="Untitled" loading="lazy"></figure>
<h1 id="可靠传输">可靠传输</h1>
<h2 id="停止等待协议swstop-and-wait">停止等待协议SW（stop-and-wait）</h2>
<p>发送窗口Wt=1，接收窗口Wr=1</p>
<p>ACK,NAK,超时计时器，数据分组（由于停等特性，1个比特编号就够了）</p>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537093.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537094.png" alt="Untitled" loading="lazy"></figure>
<h2 id="回退n帧协议gbngo-back-n">回退N帧协议GBN（go back n）</h2>
<p>1&lt;Wt≤2^(n-1),Wr=1，这里的n是用n个比特给分组编号</p>
<p>累计确认：ACKn表示序号为n<strong>及</strong>以前的数据分组都已正确接收了</p>
<p>例：若5出现问题，接收方发现不匹配，丢弃1076，会发送ACK4，后面n帧也会重传</p>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537095.png" alt="Untitled" loading="lazy"></figure>
<p>滑动的含义：</p>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537096.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537097.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041537098.png" alt="Untitled" loading="lazy"></figure>
<h2 id="选择重传协议srselective-request">选择重传协议SR（selective request）</h2>
<p>不再累计确认，而是逐一确认</p>
<p>1&lt;Wt≤2^(n-1),1&lt;Wr≤Wt</p>
<p>详细例子看课件</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[二 物理层]]></title>
        <id>https://yahalou.github.io/post/er-wu-li-ceng/</id>
        <link href="https://yahalou.github.io/post/er-wu-li-ceng/">
        </link>
        <updated>2022-07-04T07:42:18.000Z</updated>
        <content type="html"><![CDATA[<h1 id="二-物理层">二 物理层</h1>
<h1 id="传输方式">传输方式</h1>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535489.png" alt="Untitled" loading="lazy"></figure>
<h1 id="编码与调制">编码与调制</h1>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535490.png" alt="Untitled" loading="lazy"></figure>
<p>曼彻斯特编码：正跳变和负跳变表示0或者1不确定，需假设</p>
<h1 id="信道的极限容量">信道的极限容量</h1>
<h2 id="波特率">波特率</h2>
<p>波特率 — 码元传输速率，等于<strong>2W</strong></p>
<p>波特率转换为比特率需要知道1个码元携带几比特的信息量</p>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535491.png" alt="Untitled" loading="lazy"></figure>
<h2 id="香农公式">香农公式</h2>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535492.png" alt="Untitled" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535493.png" alt="Untitled" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一 概述]]></title>
        <id>https://yahalou.github.io/post/yi-gai-shu/</id>
        <link href="https://yahalou.github.io/post/yi-gai-shu/">
        </link>
        <updated>2022-07-04T07:40:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-概述">一 概述</h1>
<h1 id="一些细节">一些细节</h1>
<ol>
<li>Internet 和 internet 的区别</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535976.png" alt="Untitled" loading="lazy"></figure>
<ol>
<li>计算机网络的定义</li>
</ol>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535977.png" alt="Untitled" loading="lazy"></figure>
<p>注意计算机网络是硬件组成的</p>
<h1 id="性能指标">性能指标</h1>
<h3 id="单位">单位</h3>
<p>速率的 k，M，G，T 是 10^3</p>
<p>大小的 K，M，G，T 是 2^10</p>
<h3 id="带宽">带宽</h3>
<p>是<strong>速度</strong></p>
<h3 id="吞吐量">吞吐量</h3>
<p>单位时间内通过某个网络（或信道、接口）的数据量，是<strong>大小</strong></p>
<h3 id="时延">时延</h3>
<p>发送时延是什么</p>
<p>数据不是同时达到目的地的，想象成一串，第一个和最后一个到达的时间不一样，就是发送时延</p>
<p>计算：轮到最后一个比特发送的时间，即 数据总比特/带宽</p>
<p>可以画这个图方便理解</p>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535978.png" alt="Untitled" loading="lazy"></figure>
<p>k段链路有k+1条横线</p>
<h3 id="利用率">利用率</h3>
<p>信道利用率越高，该信道引起的时延也会增加，所以并非越高越好</p>
<h3 id="rtt">RTT</h3>
<p>往返时间</p>
<h1 id="计算机网络体系">计算机网络体系</h1>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041535330.png" alt="Untitled" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DNS相关格式转换]]></title>
        <id>https://yahalou.github.io/post/dns-xiang-guan-ge-shi-zhuan-huan/</id>
        <link href="https://yahalou.github.io/post/dns-xiang-guan-ge-shi-zhuan-huan/">
        </link>
        <updated>2022-07-04T07:24:36.000Z</updated>
        <content type="html"><![CDATA[<h1 id="用到的结构体">用到的结构体</h1>
<pre><code class="language-c">struct in_addr 
{
 	in_addr_t s_addr;//in_addr_t 一般为 32位的unsigned int，其字节顺序为网络顺序
};

typedef struct addrinfo {
  int             ai_flags;
  int             ai_family;
  int             ai_socktype;
  int             ai_protocol;
  size_t          ai_addrlen;//sockaddr中sa_data[14]中ip地址的长度
  char            *ai_canonname;
  struct sockaddr *ai_addr;
  struct addrinfo *ai_next;
} ADDRINFOA, *PADDRINFOA;

sockaddr和sockaddr_in本质上等价，后者将7字节拆了
    
struct sockaddr {
        ushort  sa_family;//同addrinfo
        char    sa_data[14];//16进制，可表示7字节
};

struct sockaddr_in {
        short   sin_family;
        u_short sin_port;//端口号，2字节
        struct  in_addr sin_addr;//ip地址，4字节
        char    sin_zero[8];//填充，1字节
};
</code></pre>
<h1 id="大端和小端">大端和小端</h1>
<table>
<thead>
<tr>
<th>序号</th>
<th>英文名</th>
<th>中文名</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>big-endian</td>
<td>大尾顺序</td>
<td>地址的低位存储值的高位</td>
</tr>
<tr>
<td>2</td>
<td>little-endian</td>
<td>小尾顺序</td>
<td>地址的低位存储值的低位</td>
</tr>
</tbody>
</table>
<p>12345678大端存储顺序</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210429171813889.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>小端存储顺序，反人类</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210429172017425.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="网络字节顺序">网络字节顺序</h1>
<h2 id="网络字节顺序nbonetwork-byte-order">网络字节顺序NBO（Network Byte Order</h2>
<p>大尾顺序</p>
<h2 id="主机字节顺序hbohost-byte-order">主机字节顺序HBO	(Host Byte Order)</h2>
<p>我的计算机是小端，本程序应该只能在小端上跑</p>
<p>判断计算机大小端的方式</p>
<figure data-type="image" tabindex="3"><img src="../../../AppData/Roaming/Typora/typora-user-images/image-20220703190805153.png" alt="image-20220703190805153" loading="lazy"></figure>
<pre><code class="language-c">#include&lt;stdio.h&gt;
int main()
{
	union {
		short s;
		char a[2];
	};
	s = 0x1234;
	printf(&quot;%x&quot;, a[0]);//34
    printf(&quot;%x&quot;, a[1]);//1
	return 0;
}
</code></pre>
<h1 id="结构体内存对齐">结构体内存对齐</h1>
<figure data-type="image" tabindex="4"><img src="../../../AppData/Roaming/Typora/typora-user-images/image-20220704111225536.png" alt="image-20220704111225536" loading="lazy"></figure>
<pre><code class="language-c++">#pragma pack(push) //保存对齐状态

#pragma pack(4)//设定为4字节对齐

相当于 #pragma  pack (push,4) 
struct sample
{
char a;
double b;
};
#pragma pack(pop)

如果不加，结构体将按照最长的double 8位进行对齐，char占8个字节
</code></pre>
<h1 id="位域">位域</h1>
<p><strong>字节内也有大小端</strong></p>
<p>对于定义如下的结构体:</p>
<pre><code class="language-c">struct yaabou_com{
int a:1;
int b:2;
int c:3;
int d:4;
int e:5;
int f:6;
int g:11;
};
大端：
地址：[00000000][00000001][00000002][00000003]
数据：|abbcccdd||ddeeeeef||fffffggg||gggggggg|
小端：
地址：[00000000][00000001][00000002][00000003]
数据：|ddcccbba||feeeeedd||gggfffff||gggggggg|
</code></pre>
<h2 id="填充步骤">填充步骤</h2>
<p>大端小端的填充步骤</p>
<p>大端模式<br>
内存地址	内存值	步骤<br>
0x10000000	0x12	4.依次取值<br>
0x10000001	0x34	3.依次取值<br>
0x10000002	0x56	2.依次取值<br>
0x10000003	0x78	1.高地址存放低位<br>
小端模式<br>
内存地址	内存值	步骤<br>
0x10000000	0x78	4.依次取值<br>
0x10000001	0x56	3.依次取值<br>
0x10000002	0x34	2.依次取值<br>
0x10000003	0x12	1.高地址存放高位</p>
<p>对于该位域，对于<strong>第一个字节</strong>，<strong>从右往左</strong>填入a,b,b,c,c,c,d,d</p>
<p>再填<strong>第二个字节</strong>，从右往左填入d,d,e,e,e,e,e,f</p>
<p>依次下去</p>
<h1 id="htons等函数">htons等函数</h1>
<p>以字节为单位，将小端调整为大端</p>
<p>htonl()--&quot;Host to Network Long&quot;<br>
ntohl()--&quot;Network to Host Long&quot;<br>
htons()--&quot;Host to Network Short&quot;<br>
ntohs()--&quot;Network to Host Short&quot;</p>
<p>例如ttl是int，用htons会变成两个字节，得用htonl，后续截断</p>
<h1 id="ip地址转换">ip地址转换</h1>
<pre><code class="language-c">char a[100]=&quot;1.2.3.4&quot;;
ip1 = inet_addr(a);//将字符变为数字，同时调整大小端
printf(&quot;ip1:%x\n&quot;, ip1);//0x04030201

struct in_addr addr1；
memcpy(&amp;addr1, &amp;ip1, 4);
printf(&quot;%s\n&quot;, inet_ntoa(addr1));//1.2.3.4
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[nslookup]]></title>
        <id>https://yahalou.github.io/post/nslookup/</id>
        <link href="https://yahalou.github.io/post/nslookup/">
        </link>
        <updated>2022-07-04T07:23:21.000Z</updated>
        <content type="html"><![CDATA[<h1 id="非交互模式">非交互模式</h1>
<p>常见操作：</p>
<pre><code>$ nslookup www.baidu.com
$ nslookup www.baidu.com 127.0.0.1 //指定dns服务器
</code></pre>
<h1 id="交互模式">交互模式</h1>
<h2 id="进入交互模式">进入交互模式</h2>
<p>常见操作：</p>
<pre><code>$ nslookup
$ nslookup - 127.0.0.1 //指定dns服务器
</code></pre>
<h2 id="在交互模式">在交互模式</h2>
<p>常见操作：</p>
<pre><code>&gt; www.baidu.com
&gt; set type = A
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DNS格式]]></title>
        <id>https://yahalou.github.io/post/dns-ge-shi/</id>
        <link href="https://yahalou.github.io/post/dns-ge-shi/">
        </link>
        <updated>2022-07-04T07:20:44.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="dns报文格式">DNS报文格式</h1>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521338.png" alt="image-20220701133810119" loading="lazy"></figure>
<h1 id="标签">标签</h1>
<p>每一格一个字节，数字是数字，不是asc</p>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521522.png" alt="image-20220701133923057" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521523.png" alt="image-20220704113044709" loading="lazy"></figure>
<p>报文中如果出现了重复的域名，会用压缩标签</p>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521524.png" alt="image-20220701182100293" loading="lazy"></figure>
<p><strong>前两个高位是11</strong>，用于指明是指针</p>
<p>后面14位标识偏移量，从DNS消息开始处</p>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521525.png" alt="image-20220704113138301" loading="lazy"></figure>
<p>0xc00c=0b1100000000001100,偏移量为12字节，dns报文头刚好12字节，指向查询部分的开头</p>
<h1 id="查询报文">查询报文</h1>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521526.png" alt="image-20220701134044037" loading="lazy"></figure>
<p>查询名称即标签</p>
<p>查询类型</p>
<img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521527.png" alt="image-20220701134135273"  />
<p>查询类</p>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521528.png" alt="image-20220701134306130" loading="lazy"></figure>
<h1 id="回答报文">回答报文</h1>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521529.png" alt="image-20220701134337042" loading="lazy"></figure>
<p>前三个同查询报文</p>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521032.png" alt="image-20220701134436502" loading="lazy"></figure>
<p>RDATA中是想要的IP地址</p>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521530.png" alt="image-20220704114129777" loading="lazy"></figure>
<p>转换过程见格式转换</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="dns报文格式">DNS报文格式</h1>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521338.png" alt="image-20220701133810119" loading="lazy"></figure>
<h1 id="标签">标签</h1>
<p>每一格一个字节，数字是数字，不是asc</p>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521522.png" alt="image-20220701133923057" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521523.png" alt="image-20220704113044709" loading="lazy"></figure>
<p>报文中如果出现了重复的域名，会用压缩标签</p>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521524.png" alt="image-20220701182100293" loading="lazy"></figure>
<p><strong>前两个高位是11</strong>，用于指明是指针</p>
<p>后面14位标识偏移量，从DNS消息开始处</p>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521525.png" alt="image-20220704113138301" loading="lazy"></figure>
<p>0xc00c=0b1100000000001100,偏移量为12字节，dns报文头刚好12字节，指向查询部分的开头</p>
<h1 id="查询报文">查询报文</h1>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521526.png" alt="image-20220701134044037" loading="lazy"></figure>
<p>查询名称即标签</p>
<p>查询类型</p>
<img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521527.png" alt="image-20220701134135273"  />
<p>查询类</p>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521528.png" alt="image-20220701134306130" loading="lazy"></figure>
<h1 id="回答报文">回答报文</h1>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521529.png" alt="image-20220701134337042" loading="lazy"></figure>
<p>前三个同查询报文</p>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521032.png" alt="image-20220701134436502" loading="lazy"></figure>
<p>RDATA中是想要的IP地址</p>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202207041521530.png" alt="image-20220704114129777" loading="lazy"></figure>
<p>转换过程见格式转换</p>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第七章 IO]]></title>
        <id>https://yahalou.github.io/post/di-qi-zhang-io/</id>
        <link href="https://yahalou.github.io/post/di-qi-zhang-io/">
        </link>
        <updated>2022-06-23T04:49:17.000Z</updated>
        <content type="html"><![CDATA[<h1 id="基本概念">基本概念</h1>
<figure data-type="image" tabindex="1"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222232266.png" alt="image-20220622223234970" loading="lazy"></figure>
<h2 id="io控制方式">IO控制方式</h2>
<h3 id="程序查询方式程序中断方式">程序查询方式，程序中断方式</h3>
<figure data-type="image" tabindex="2"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222241948.png" alt="image-20220622224104994" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222243876.png" alt="image-20220622224338964" loading="lazy"></figure>
<p>程序查询方式也可以定时查询，上图表示的是独占查询</p>
<h3 id="dma控制方式">DMA控制方式</h3>
<figure data-type="image" tabindex="4"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222244643.png" alt="image-20220622224443419" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222251123.png" alt="image-20220622225147199" loading="lazy"></figure>
<p>与前两种的区别是：前两种是读到 CPU 的某个寄存器中，再读到主存中，DMA是直接读到主存中</p>
<h3 id="通道控制方式">通道控制方式</h3>
<figure data-type="image" tabindex="6"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222255780.png" alt="image-20220622225532830" loading="lazy"></figure>
<h2 id="io系统组成">IO系统组成</h2>
<figure data-type="image" tabindex="7"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222258390.png" alt="image-20220622225807984" loading="lazy"></figure>
<p>驱动程序的作用</p>
<h1 id="外部设备">外部设备</h1>
<h2 id="输入设备">输入设备</h2>
<p>键鼠</p>
<h2 id="输出设备">输出设备</h2>
<h4 id="显示器参数">显示器参数</h4>
<p>屏幕大小是<strong>对角线长度</strong></p>
<h4 id="vram的计算">VRAM的计算</h4>
<figure data-type="image" tabindex="8"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222334058.png" alt="image-20220622233405050" loading="lazy"></figure>
<p>分辨率是像素个数，灰度位数是每个像素需要多少个bit表示</p>
<h4 id="关于显卡">关于显卡</h4>
<figure data-type="image" tabindex="9"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222338287.png" alt="image-20220622233832301" loading="lazy"></figure>
<p>集显和独显的区别：集显的显存用的是内存</p>
<p>显存理论最小值：一帧的大小（VRAM容量）</p>
<h2 id="外存储器">外存储器</h2>
<h3 id="磁盘">磁盘</h3>
<figure data-type="image" tabindex="10"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222351497.png" alt="image-20220622235103654" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206222353751.png" alt="image-20220622235310872" loading="lazy"></figure>
<ul>
<li>
<p>一个硬盘有多个<strong>盘面</strong>，一个盘面有一个<strong>磁头</strong></p>
</li>
<li>
<p>一个盘面会有很多圈磁性材质，叫做<strong>磁道</strong></p>
</li>
<li>
<p>为了方便计算机读写，将每个磁道划分成多个<strong>扇区</strong></p>
</li>
<li>
<p><strong>柱面号</strong>就是磁道号</p>
</li>
</ul>
<h3 id="磁盘性能指标">磁盘性能指标</h3>
<h4 id="磁盘的容量">磁盘的容量</h4>
<figure data-type="image" tabindex="12"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230000317.png" alt="image-20220623000020994" loading="lazy"></figure>
<p>格式化后有些容量留作备用，所以会变小</p>
<h4 id="记录密度">记录密度</h4>
<figure data-type="image" tabindex="13"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230001540.png" alt="image-20220623000124468" loading="lazy"></figure>
<h3 id="平均存取时间">平均存取时间</h3>
<figure data-type="image" tabindex="14"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230003130.png" alt="image-20220623000259275" loading="lazy"></figure>
<p>旋转延迟时间平均等于<strong>转半圈所需时间</strong></p>
<h4 id="数据传输率">数据传输率</h4>
<figure data-type="image" tabindex="15"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230004728.png" alt="image-20220623000439942" loading="lazy"></figure>
<h3 id="磁盘阵列">磁盘阵列</h3>
<figure data-type="image" tabindex="16"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230007979.png" alt="image-20220623000730850" loading="lazy"></figure>
<p>RAID0<strong>没有</strong>容错能力，RAID1有容错能力，但是容量减少一半</p>
<h3 id="光盘">光盘</h3>
<figure data-type="image" tabindex="17"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230009126.png" alt="image-20220623000950252" loading="lazy"></figure>
<h1 id="中断">中断</h1>
<figure data-type="image" tabindex="18"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230826503.png" alt="image-20220623082612662" loading="lazy"></figure>
<p>原子操作：要么不做要么做到底</p>
<p>大多数中断都是可屏蔽中断</p>
<h2 id="中断判优">中断判优</h2>
<figure data-type="image" tabindex="19"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230830060.png" alt="image-20220623083023351" loading="lazy"></figure>
<figure data-type="image" tabindex="20"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230831876.png" alt="image-20220623083122392" loading="lazy"></figure>
<h2 id="中断处理过程">中断处理过程</h2>
<figure data-type="image" tabindex="21"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230834409.png" alt="image-20220623083403679" loading="lazy"></figure>
<figure data-type="image" tabindex="22"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230835936.png" alt="image-20220623083524084" loading="lazy"></figure>
<p>中断服务程序：</p>
<figure data-type="image" tabindex="23"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230838543.png" alt="image-20220623083806348" loading="lazy"></figure>
<h2 id="多重中断">多重中断</h2>
<figure data-type="image" tabindex="24"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230845657.png" alt="image-20220623084528949" loading="lazy"></figure>
<p>屏蔽字：哪些中断请求应该被屏蔽，只保留更深一层的中断，1为屏蔽，0为不屏蔽，自己要屏蔽自己</p>
<h2 id="中断细节">中断细节</h2>
<p>启动后CPU可以继续干之前的事情，跟程序查询不一样</p>
<figure data-type="image" tabindex="25"><img src="https://myimagess.oss-cn-beijing.aliyuncs.com/202206230909993.png" alt="image-20220623090954094" loading="lazy"></figure>
]]></content>
    </entry>
</feed>